{"version":3,"sources":["AddTask.jsx","Display.jsx","DisplayDone.jsx","Main.jsx","App.js","index.js"],"names":["uuidv4","require","v4","AddTask","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","get","state","id","task","addTask","openTask","isDone","console","log","this","className","htmlFor","onChange","type","onClick","Component","Display","handleRemove","remove","toggleForm","isEditing","handleUpdate","updateTask","handleDone","checkDone","content","result","onSubmit","DisplayDone","Main","getTask","tasks","update","updatedContent","updatedTasks","map","elem","toggleDone","doneTasks","filter","displayTasks","displayDoneTasks","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c44c61eb.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport \"./addTask.css\"\nconst { v4: uuidv4 } = require('uuid')\n\nexport default class AddTask extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            task: \"\",\n            isDone: false,\n            addTask: false,\n        }\n    }\n\n    handleChange = (e) =>{\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.props.get({...this.state, id: uuidv4()})\n        this.setState({task: \"\",\n        addTask: !this.state.addTask})\n    }\n\n    openTask = ()=>{\n        this.setState({\n            addTask: !this.state.addTask\n        })\n    }\n\n    render() {\n        let result; \n        console.log(this.state.addTask);\n        if (!this.state.addTask){\n            result = \n            (<div>\n            <button className=\"openAddTaskButton\" onClick={this.openTask} type=\"button\">Add new task</button>    \n            </div>)\n        }else{\n            result = \n            (\n                <div className=\"addTask\">\n                    <label htmlFor=\"task\">Add your task here:</label>\n                    <input className=\"addTaskInput\" onChange={this.handleChange} type=\"text\" name=\"task\" value={this.state.task}></input>\n                    <button className=\"addTaskButton\" type=\"button\" onClick={this.handleSubmit}>+</button>\n                </div>   \n            )\n        }\n        return result\n    }\n}\n","import React, { Component } from 'react'\nimport \"./display.css\"\n\nexport default class Display extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            isEditing: false,\n            task: this.props.content,\n            isDone: false,\n        }\n    }\n    handleRemove = ()=>{\n        this.props.remove(this.props.id)\n    }\n\n    toggleForm=()=>{\n        this.setState({\n            isEditing: !this.state.isEditing\n        })\n    }\n\n    handleUpdate=(e)=>{\n        e.preventDefault();\n        this.props.updateTask(this.props.id, this.state.task)\n        this.setState({\n            isEditing: false\n        })\n   \n        }\n\n    handleChange = (e) =>{\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleDone = (e) =>{\n        e.preventDefault()\n        this.setState({\n            isDone: !this.state.isDone\n        })\n        this.props.checkDone(this.props.id, this.state.task)\n    }\n\n    render() {\n        \n        let result;\n        if(this.state.isEditing){\n            result = (\n                <div className=\"display\">\n                    \n                    <form onSubmit={this.handleUpdate} >\n                        <input type=\"text\" value={this.state.task} name=\"task\" onChange={this.handleChange}/>\n                        <button>Save</button>\n                    </form>\n                </div>\n            )\n        } else {\n            result = <div className=\"display\">\n             \n             <div>\n            <button className=\"doneButton\" onClick={this.handleDone}>done</button>    \n            {this.props.content}\n            </div>\n            <div>\n            <button onClick={this.toggleForm}>edit</button>\n            <button className=\"deleteButton\"onClick={this.handleRemove}>X</button>\n            </div>\n        </div>\n        \n        }\n        return (<div>\n        \n        {result}   \n        </div>)\n        \n    }\n}\n","import React, { Component } from 'react'\nimport \"./display.css\"\n\nexport default class DisplayDone extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            \n            task: this.props.content,\n            isDone: true,\n        }\n    }\n\n    handleDone = (e) =>{\n        e.preventDefault()\n        this.setState({\n            isDone: !this.state.isDone\n        })\n        this.props.checkDone(this.props.id, this.state.task)\n    }\n\n    handleRemove = ()=>{\n        this.props.remove(this.props.id)\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"display\">\n             <div>\n             <button className=\"doneButton\" onClick={this.handleDone}>undone</button>    \n             {this.props.content}\n             </div>\n             <button onClick={this.handleRemove}>X</button>\n             \n         </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport AddTask from \"./AddTask\"\nimport Display from \"./Display\"\nimport DisplayDone from \"./DisplayDone\"\nimport \"./main.css\"\n\n\nexport default class Main extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            tasks: []\n        }\n    }\n\n    getTask = (task) =>{\n        this.setState({\n           tasks: [...this.state.tasks, task]\n        })\n    }\n\n    update = (id, updatedContent)=>{\n        const updatedTasks = this.state.tasks.map(elem =>{\n            if (elem.id === id){\n                return {...elem, task: updatedContent}\n            }\n            return elem;\n        })\n        this.setState({tasks: updatedTasks})\n    }\n\n    toggleDone = (id) => {\n        const doneTasks = this.state.tasks.map(elem => {\n            console.log(elem.isDone);\n            if (elem.id === id) {\n                return {...elem, isDone: !elem.isDone}\n            }\n            return elem\n        })\n        this.setState({tasks: doneTasks})\n    }\n\n    remove = (id) =>{\n        this.setState({\n            tasks: this.state.tasks.filter(elem =>{\n                return elem.id !== id\n            })\n        })\n    }\n\n    render() {\n\n        const displayTasks = this.state.tasks.map(elem=> {\n            if (!elem.isDone) {\n        return <Display \n        key={elem.id} \n        id={elem.id} \n        content={elem.task} \n        remove={this.remove} \n        updateTask={this.update}\n        checkDone={this.toggleDone}\n        />\n        }});\n\n        const displayDoneTasks = this.state.tasks.map(elem=>{\n            if (elem.isDone) {\n            return <DisplayDone\n            key={elem.id} \n            id={elem.id} \n            content={elem.task} \n            remove={this.remove} \n            updateTask={this.update}\n            checkDone={this.toggleDone}\n            />\n        }})\n        \n\n\n        return (\n            <div className=\"Main\">\n                <div className=\"header\">\n                    <h1>Your to-do app</h1>\n                    <AddTask get={this.getTask} />\n                    \n                </div>\n                \n                <h3 className=\"category\">Tasks to do: </h3>\n                {displayTasks}\n                <h3 className=\"category\">Tasks done:</h3>\n                {displayDoneTasks}\n            </div>\n        )\n    }\n}\n","\nimport './App.css';\nimport Main from \"./Main.jsx\"\nfunction App() {\n  return (\n    <div>\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}